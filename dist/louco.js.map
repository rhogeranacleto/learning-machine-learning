{"version":3,"file":"louco.js","sourceRoot":"/","sources":["louco.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,qCAA2C;AAC3C,mFAAuE;AACvE,gDAAkC;AAElC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACvB,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAElC,SAAe,SAAS;;QAEvB,MAAM,UAAU,GAAG,MAAM,0BAAgB,EAAE,CAAC;QAE5C,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,aAAa,CAAC,gDAAkB,CAAC,CAAC,IAAI,CAAC;YACvE,IAAI,EAAE,EAAE;SACR,CAAC,CAAC;QAEH,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAE5B,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;YACpC,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACtB,CAAC,CAAC;QAEH,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAE5C,MAAM,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACxE,MAAM,WAAW,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1F,OAAO;gBACN,KAAK,EAAE,MAAM,CAAC,IAAI;gBAClB,MAAM,EAAE,GAAG,SAAS,MAAM,WAAW,EAAE;aACvC,CAAA;QACF,CAAC,CAAC,EAAE;YACF,GAAG,EAAE,IAAI;YACT,WAAW,EAAE,GAAG;YAChB,UAAU,EAAE,GAAG;SACf,CAAC,CAAC;QAEJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAE5B,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK;YAEvC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEnB,MAAM,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE7C,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAGJ,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sourcesContent":["import { createConnection } from \"typeorm\";\nimport { VehicleModelRecord } from \"./src/vehicle-model-record.entity\";\nimport * as brain from 'brain.js';\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf8');\n\nasync function bootstrap() {\n\n\tconst connection = await createConnection();\n\n\tconst records = await connection.getRepository(VehicleModelRecord).find({\n\t\ttake: 50\n\t});\n\n\tconsole.log(records.length);\n\n\tconst net = new brain.recurrent.LSTM({\n\t\thiddenLayers: [70, 20]\n\t});\n\n\tconst train = net.train(records.map(record => {\n\n\t\tconst modelName = record.vehicle_model ? record.vehicle_model.name : '';\n\t\tconst versionName = record.vehicle_model_version ? record.vehicle_model_version.name : '';\n\t\treturn {\n\t\t\tinput: record.name,\n\t\t\toutput: `${modelName} | ${versionName}`\n\t\t}\n\t}), {\n\t\t\tlog: true,\n\t\t\terrorThresh: 0.1,\n\t\t\titerations: 200\n\t\t});\n\n\tconsole.log(train);\n\n\tconsole.log('Pode digita:');\n\n\tprocess.stdin.on('data', function (chunk) {\n\n\t\tconsole.log(chunk);\n\n\t\tconst output = net.run(chunk.split('\\n')[0]);\n\n\t\tconsole.log(output);\n\t});\n\n\n}\n\nbootstrap();"]}